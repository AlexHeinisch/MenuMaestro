/**
 * Menu Maestro account API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { AccountCreateRequestDto } from '../model/models';
import { AccountEditRequestDto } from '../model/models';
import { AccountInfoDto } from '../model/models';
import { AccountSummaryListPaginatedDto } from '../model/models';
import { ErrorResponse } from '../model/models';
import { ResetPasswordCommitRequestDto } from '../model/models';


import { Configuration }                                     from '../configuration';



export interface AccountsApiServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * 
     * 
     * @param accountCreateRequestDto 
     */
    createAccount(accountCreateRequestDto?: AccountCreateRequestDto, extraHttpRequestParams?: any): Observable<AccountInfoDto>;

    /**
     * 
     * 
     * @param username The username of the account to be deleted.
     */
    deleteAccount(username: string, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * 
     * 
     * @param username 
     * @param accountEditRequestDto 
     */
    editAccount(username: string, accountEditRequestDto?: AccountEditRequestDto, extraHttpRequestParams?: any): Observable<AccountInfoDto>;

    /**
     * 
     * 
     */
    getAccountInfo(extraHttpRequestParams?: any): Observable<AccountInfoDto>;

    /**
     * 
     * 
     * @param username 
     * @param token Password reset token sent via email by the application.
     * @param resetPasswordCommitRequestDto 
     */
    resetPasswordCommit(username: string, token: string, resetPasswordCommitRequestDto?: ResetPasswordCommitRequestDto, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * 
     * 
     * @param username 
     */
    resetPasswordInitiate(username: string, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * Search accounts by username
     * Get a list of accounts matching the search query.
     * @param page Zero-based page index (0..N)
     * @param size The size of the page to be returned
     * @param name The search query to filter accounts by username, firstname or lastname.
     * @param excludingOrganization The search query to filter accounts by not in organization.
     */
    searchAccounts(page?: number, size?: number, name?: string, excludingOrganization?: number, extraHttpRequestParams?: any): Observable<AccountSummaryListPaginatedDto>;

}
