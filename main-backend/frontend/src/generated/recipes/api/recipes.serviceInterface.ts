/**
 * Menu Maestro recipes API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { ErrorResponse } from '../model/models';
import { ProblemDetails } from '../model/models';
import { RecipeCreateEditDto } from '../model/models';
import { RecipeDto } from '../model/models';
import { RecipeListPaginatedDto } from '../model/models';
import { RecipeVisibility } from '../model/models';


import { Configuration }                                     from '../configuration';



export interface RecipesApiServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * Create a new persistent recipe
     * 
     * @param recipeCreateEditDto data for the recipe
     */
    createRecipe(recipeCreateEditDto?: RecipeCreateEditDto, extraHttpRequestParams?: any): Observable<RecipeDto>;

    /**
     * 
     * 
     * @param id id of the recipe
     */
    deleteRecipeById(id: number, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * Edit an already existing recipe.
     * 
     * @param id id of the recipe
     * @param recipeCreateEditDto data for the recipe
     */
    editRecipeById(id: number, recipeCreateEditDto?: RecipeCreateEditDto, extraHttpRequestParams?: any): Observable<RecipeDto>;

    /**
     * 
     * 
     * @param id id of the recipe
     */
    getRecipeById(id: number, extraHttpRequestParams?: any): Observable<RecipeDto>;

    /**
     * Get a list of all Recipes matching the search query.
     * 
     * @param page Zero-based page index (0..N)
     * @param size The size of the page to be returned
     * @param name 
     * @param description 
     * @param author 
     * @param ingredients 
     * @param requiredCookingAppliances Cooking appliances (set of ids). If set, no recipe using any other appliance is returned.
     * @param visibility 
     */
    getRecipes(page?: number, size?: number, name?: string, description?: string, author?: string, ingredients?: Array<number>, requiredCookingAppliances?: Array<number>, visibility?: RecipeVisibility, extraHttpRequestParams?: any): Observable<RecipeListPaginatedDto>;

}
