openapi: 3.0.0
info:
  title: Menu Maestro Stash API
  version: 1.0.0
  description: The API for the Menu-Maestro Stash feature

servers:
  - url: http://localhost:8080

paths:
  /stash:
    get:
      operationId: searchStashes
      tags:
        - Stash
      parameters:
        - name: name
          schema:
            type: string
          in: query
          required: false
        - name: page
          schema:
            type: integer
          in: query
          required: false
        - name: size
          schema:
            type: integer
          in: query
          required: false
      responses:
        '200':
          description: Success Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StashSearchResponseDto'
  /stash/{id}:
    get:
      operationId: getStash
      tags:
        - Stash
      parameters:
      - name: id
        schema:
          type: integer
          format: int64
        in: path
        required: true
      responses:
        '200':
          description: Success Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StashResponseDto'
          headers:
            ETag:
              description: resource version identifier for lost-update prevention
              schema:
                type: string
        '403':
          description: Permission Denied, e.g. not allowed to access stash
          content:
            application/json:
              schema:
                $ref: 'ErrorResponse.yaml#/components/responses/ErrorResponse'
    patch:
      operationId: updateStashIngredients
      tags:
        - Stash
      parameters:
        - name: id
          schema:
            type: integer
            format: int64
          in: path
          required: true
        - name: If-Match
          description: Standard precondition header, give an ETAG here. See the 412 response status.
          schema:
            type: string
          in: header
          required: false
      requestBody:
        description: "List of ingredients to modify. Use amount 0 to delete, nonzero amount to add"
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "Ingredients.yaml#/components/schemas/IngredientUseCreateEditDto"
        required: true

      responses:
        '200':
          description: Success Response
          headers:
            ETag:
              description: New ETAG value after the operation.
              schema:
                type: string
              required: true
        '400':
          description: Malformed request, e.g. missing body or invalid json
          content:
            application/json:
              schema:
                $ref: "ErrorResponse.yaml#/components/responses/ErrorResponse"
        '422':
          description: Unprocessable Request
          content:
            application/json:
              schema:
                $ref: "ErrorResponse.yaml#/components/responses/ErrorResponse"
        '403':
          description: No edit access for stash
          content:
            application/json:
              schema:
                $ref: "ErrorResponse.yaml#/components/responses/ErrorResponse"
        '412':
          description: Precondition failed - The server was instructed via If-Match to not apply the patch in case of an unexpected version change.

  /stash/{id}/move-ingredients:
    post:
      operationId: moveStashIngredients
      tags:
        - Stash
      description: Removes the selected ingredient amounts from one stash and adds them to another.
      parameters:
        - name: id
          schema:
            type: integer
            format: int64
          in: path
          required: true
        - name: otherStashId
          schema:
            type: integer
            format: int64
          in: query
          required: true
      requestBody:
        required: true
        description: Specifies which ingredients + amounts to move
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "Ingredients.yaml#/components/schemas/IngredientUseCreateEditDto"
      responses:
        '204':
          description: Success Response
          headers:
            ETag:
              description: New version tag for this stash
              schema:
                type: string

components:
  schemas:
    StashResponseDto:
      description: "Full info of stash and its ingredients"
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        versionNumber:
          type: string
        ingredients:
          type: array
          items:
            $ref: "Ingredients.yaml#/components/schemas/IngredientUseDto"
        correspondingOrganizationId:
          description: ID of the organization to which the stash belongs, for menu stashes its the menu's organization
          type: integer
          format: int64
      required:
        - id
        - name
        - ingredients
        - versionNumber
        - correspondingOrganizationId
    StashSearchResponseDto:
      description: Basic info of a stash
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      required:
        - id
        - name
