openapi: 3.0.0
info:
  title: "Menu Maestro meal API"
  version: 1.0.0
  description: "The API for the Menu-Maestro meal"

servers:
  - url: http://localhost:8080

paths:
  /meals/{id}:
    get:
      operationId: getMealById
      tags:
        - meals
      summary: "Get a single meal by its id"
      description: "Returns a single meal by its id."
      parameters:
        - $ref: 'Common.yaml#/components/parameters/pageParam'
      responses:
        200:
          description: "Success - Returns the meal with the specified ID."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MealResponse'
        401:
          description: "Unauthorized - User needs to be logged in to access this resource."
          content:
            application/json:
              schema:
                $ref: 'Common.yaml#/components/schemas/ErrorResponse'
        403:
          description: "Forbidden - User does not have the necessary permissions to access this resource."
          content:
            application/json:
              schema:
                $ref: 'Common.yaml#/components/schemas/ErrorResponse'
        404:
          description: "Not Found - A meal with the specified ID was not found."
          content:
            application/json:
              schema:
                $ref: 'Common.yaml#/components/schemas/ErrorResponse'
    delete:
      operationId: deleteMealById
      tags:
        - meals
      summary: "Delete a meal by its ID."
      description: "Deletes the meal with the given ID."
      parameters:
        - $ref: 'Common.yaml#/components/parameters/idPathParam'
      responses:
        204:
          description: "No Content - the meal was deleted."
        401:
          description: "Unauthorized - User needs to be logged in to access this resource."
          content:
            application/json:
              schema:
                $ref: 'Common.yaml#/components/schemas/ErrorResponse'
        403:
          description: "Forbidden - User does not have the necessary permissions to access this resource."
          content:
            application/json:
              schema:
                $ref: 'Common.yaml#/components/schemas/ErrorResponse'
        404:
          description: "Not Found - a meal with the specified ID was not found."
          content:
            application/json:
              schema:
                $ref: 'Common.yaml#/components/schemas/ErrorResponse'
    put:
      operationId: editMealById
      tags:
        - Meals
      summary: 'Edit an already existing meal.'
      description: 'Edit the meal with the given ID.'
      parameters:
        - $ref: 'Common.yaml#/components/parameters/idPathParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MealEditDto'
      responses:
        200:
          description: "Success - returns the edited meal."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MealResponse'
        401:
          description: "Unauthorized - User needs to be logged in to access this resource."
          content:
            application/json:
              schema:
                $ref: 'Common.yaml#/components/schemas/ErrorResponse'
        403:
          description: "Forbidden - User does not have the necessary permissions to access this resource."
          content:
            application/json:
              schema:
                $ref: 'Common.yaml#/components/schemas/ErrorResponse'
        404:
          description: "Not Found - a meal with the specified ID was not found."
          content:
            application/json:
              schema:
                $ref: 'Common.yaml#/components/schemas/ErrorResponse'
        422:
          description: "Unprocessable Entity - Validation errors occurred."
          content:
            application/json:
              schema:
                $ref: 'Common.yaml#/components/schemas/ErrorResponse'

  /meals/{id}/completion:
    put:
      operationId: completeMealById
      tags:
        - meals
      summary: "Mark a meal as done."
      description: "Marks a meal as done and deletes it from the stash if necessary."
      parameters:
        - $ref: 'Common.yaml#/components/parameters/idPathParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MealCompleteRequest'
      responses:
        204:
          description: "No Content - the meal was marked as done."
        401:
          description: "Unauthorized - User needs to be logged in to access this resource."
          content:
            application/json:
              schema:
                $ref: 'Common.yaml#/components/schemas/ErrorResponse'
        403:
          description: "Forbidden - User does not have the necessary permissions to access this resource."
          content:
            application/json:
              schema:
                $ref: 'Common.yaml#/components/schemas/ErrorResponse'
        404:
          description: "Not Found - a meal with the specified ID was not found."
          content:
            application/json:
              schema:
                $ref: 'Common.yaml#/components/schemas/ErrorResponse'

components:
  schemas:
    MealStatusEnum:
      type: string
      description: "Status of meal in a menu indicating if it is done or if ingredients are missing."
      enum:
        - DONE
        - ALL_INGREDIENTS_MISSING
        - SOME_INGREDIENTS_MISSING
        - ALL_INGREDIENTS_PRESENT
        - CLOSED

    MealResponse:
      type: object
      description: "Response object for a meal."
      properties:
        id:
          type: integer
          format: int64
          description: "Unique identifier of the meal."
        name:
          type: string
          description: "Name of the meal"
        status:
          $ref: '#/components/schemas/MealStatusEnum'
        numberOfPeople:
          type: integer
          minimum: 1
          description: "Number of people the meal is intended for."
        organizationId:
          type: integer
          format: int64
        recipe:
          $ref: 'Recipes.yaml#/components/schemas/RecipeResponse'
      required:
        - id
        - name
        - status
        - numberOfPeople
        - recipe

    MealEditDto:
      type: object
      description: "Request object for editing a meal."
      properties:
        name:
          type: string
          description: "Name of the meal"
        numberOfPeople:
          type: integer
          minLength: 1
          description: "Number of people the meal is intended for."
        recipe:
          $ref: 'Recipes.yaml#/components/schemas/RecipeCreateEditRequest'
      required:
        - name
        - numberOfPeople
        - recipe

    MealCompleteRequest:
      type: object
      properties:
        done:
          type: boolean
          description: "Indicates if the meal is done."
        deleteFromStash:
          type: boolean
          description: "Indicates if the meal should be deleted from the stash."
      required:
        - done
        - deleteFromStash
